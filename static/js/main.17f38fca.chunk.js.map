{"version":3,"sources":["components/Price/Price.js","components/Limit/Limit.js","components/Minute/Minute.js","components/Sms/Sms.js","components/Buy/Buy.js","components/Result/Result.js","App.js","serviceWorker.js","index.js"],"names":["Price","props","className","price","Limit","limit","src","alt","Minute","minute","Sms","sms","Buy","href","Result","App","useState","filter","setFilter","o","map","product","index","key","onClick","prevState","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oKAEe,SAASA,EAAMC,GAC1B,OACI,yBAAKC,UAAU,OACX,yBAAKA,UAAU,SACf,kGACA,yBAAKA,UAAU,QACX,4BAAKD,EAAME,OACX,6BACI,iCACA,mECTL,SAASC,EAAMH,GAC1B,OACI,yBAAKC,UAAU,OACX,2BAAID,EAAMI,MAAV,iBACA,kGACA,yBAAKH,UAAU,OACf,yBAAKI,IAAI,0BAA0BC,IAAI,QACvC,yBAAKD,IAAI,2BAA2BC,IAAI,QACxC,yBAAKD,IAAI,0BAA0BC,IAAI,QACvC,yBAAKD,IAAI,2BAA2BC,IAAI,UCTrC,SAASC,EAAOP,GAC3B,OACI,yBAAKC,UAAU,OACX,6BAAK,4BAAKD,EAAMQ,OAAX,yBACL,mGAAsB,6BAAtB,0CCJG,SAASC,EAAIT,GACxB,OACI,yBAAKC,UAAU,OACX,2BAAID,EAAMU,IAAV,SCHG,SAASC,IACpB,OACI,yBAAKV,UAAU,OACX,uBAAGA,UAAU,OACT,uBAAIW,KAAK,qBAAT,8CCCD,SAASC,EAAOb,GAE3B,OACI,yBAAKC,UAAU,WACX,kBAACF,EAAD,CAAOG,MAAOF,EAAME,QACpB,kBAACC,EAAD,CAAOC,MAAOJ,EAAMI,QACpB,kBAACG,EAAD,CAAQC,OAAQR,EAAMQ,SACtB,kBAACC,EAAD,CAAKC,IAAKV,EAAMU,MAChB,kBAACC,EAAD,OCiCGG,MA7Cf,WAAgB,IAAD,EAEiBC,mBAAS,aAF1B,mBAEJC,EAFI,KAEIC,EAFJ,KAkBX,OACI,6BAfgB,CAChB,CAAEf,MAAO,IAAKE,MAAO,GAAII,OAAQ,IAAKE,IAAK,IAC3C,CAAER,MAAO,IAAKE,MAAO,GAAII,OAAQ,IAAKE,IAAK,IAC3C,CAAER,MAAO,IAAKE,MAAO,GAAII,OAAQ,IAAKE,IAAK,IAC3C,CAAER,MAAO,IAAKE,MAAO,EAAGI,OAAQ,IAAKE,IAAK,IAC1C,CAAER,MAAO,IAAKE,MAAO,GAAII,OAAQ,IAAKE,IAAK,IAC3C,CAAER,MAAO,IAAKE,MAAO,GAAII,OAAQ,IAAKE,IAAK,IAC3C,CAAER,MAAO,EAAGE,MAAO,GAAII,OAAQ,IAAKE,IAAK,KAUhCM,QAAO,SAAAE,GACJ,MAAe,cAAXF,EACOE,EAEI,aAAXF,EACOE,EAAEhB,MAAQ,GAEdgB,KAEVC,KAAI,SAACC,EAASC,GACX,OACI,kBAACR,EAAD,CACIS,IAAKD,EACLnB,MAAOkB,EAAQlB,MACfE,MAAOgB,EAAQhB,MACfI,OAAQY,EAAQZ,OAChBE,IAAKU,EAAQV,SAGzB,4BAAQa,QA1Bc,WAC9BN,GAAU,SAAAO,GAAS,MAAkB,cAAdA,EAA4B,WAAa,iBAyBxD,qBC/BIC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.17f38fca.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Price(props) {\n    return (\n        <div className=\"all\">\n            <div className='price'>\n            <p>Везде онлайн</p>\n            <div className=\"list\">\n                <h1>{props.price}</h1>\n                <div>\n                    <h5>p</h5>\n                    <h5>/месяц</h5>\n                </div>\n            </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Limit(props) {\n    return (\n        <div className=\"all\">\n            <p>{props.limit} гб</p>\n            <p>+безлимитные</p>\n            <div className=\"img\">\n            <img src=\"img/5293 - Facebook.png\" alt=\"job\"/>\n            <img src=\"img/5294 - Twitter I.png\" alt=\"job\"/>\n            <img src=\"img/5302 - Whatsapp.png\" alt=\"job\"/>\n            <img src=\"img/5295 - Youtube I.png\" alt=\"job\"/>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Minute(props) {\n    return (\n        <div className=\"all\">\n            <div><h3>{props.minute} мин.</h3></div>\n            <p>+ безлимит на Tele2<br/> России</p>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Sms(props) {\n    return (\n        <div className=\"all\">\n            <p>{props.sms} SMS</p>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Buy() {\n    return (\n        <div className=\"all\">\n            <p className=\"btn\">\n                <a  href=\"http://google.com\">Купить SIM</a>\n            </p>\n        </div>\n    )\n}\n","import React from 'react'\nimport Price from '../Price/Price'\nimport Limit from '../Limit/Limit'\nimport Minute from '../Minute/Minute'\nimport Sms from '../Sms/Sms'\nimport Buy from '../Buy/Buy'\n\nexport default function Result(props) {\n\n    return (\n        <div className='product'>\n            <Price price={props.price}/>\n            <Limit limit={props.limit}/>\n            <Minute minute={props.minute}/>\n            <Sms sms={props.sms}/>\n            <Buy/>\n        </div>\n    )\n}\n","import React, {useState} from 'react'\nimport Result from './components/Result/Result'\n\nfunction App() {\n\n    const [filter, setFilter] = useState('no-filter');\n\n    const productInfo = [\n        { price: 500, limit: 40, minute: 500, sms: 50 },\n        { price: 400, limit: 15, minute: 500, sms: 15 },\n        { price: 700, limit: 30, minute: 800, sms: 30 },\n        { price: 200, limit: 2, minute: 200, sms: 60 },\n        { price: 300, limit: 15, minute: 500, sms: 50 },\n        { price: 100, limit: 40, minute: 500, sms: 50 },\n        { price: 7, limit: 30, minute: 502, sms: 50 }\n    ]\n\n    const handleToggleFilterByPrice = () => {\n        setFilter(prevState => prevState === 'no-filter' ? 'filter50' : 'no-filter');\n    }\n\n    return (\n        <div>\n            {productInfo\n                .filter(o => {\n                    if (filter === 'no-filter') {\n                        return o;\n                    }\n                    if (filter === 'filter50') {\n                        return o.price > 59;\n                    }\n                    return o;\n                })\n                .map((product, index) => {\n                    return (\n                        <Result\n                            key={index}\n                            price={product.price}\n                            limit={product.limit}\n                            minute={product.minute}\n                            sms={product.sms} />\n                    )\n                })}\n                <button onClick={handleToggleFilterByPrice}>Toggle By Price</button>\n        </div>\n    )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}